"use strict";var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)},core_1=require("@angular/core"),router_1=require("@angular/router"),member_1=require("./member"),member_service_1=require("./member.service"),MemberDetailEditComponent=function(){function MemberDetailEditComponent(memberService,router,activatedRoute){this.memberService=memberService,this.router=router,this.activatedRoute=activatedRoute}return MemberDetailEditComponent.prototype.ngOnInit=function(){var _this=this,id=+this.activatedRoute.snapshot.params.id;console.log("MemberDetailEditComponent instantiated with the following id : "+id),id?this.memberService.get(id).subscribe(function(item){return _this.item=item}):0===id?(console.log("id is 0: adding a new item..."),this.item=new member_1.Member(0,"New Value","New Value","New Value","New Value",new Date,"New Value")):(console.log("Invalid id: routing back to home..."),this.router.navigate([""]))},MemberDetailEditComponent.prototype.onInsert=function(item){var _this=this;this.memberService.add(item).subscribe(function(data){_this.item=data,console.log("Item "+_this.item.ID+" has been added."),_this.router.navigate([""])},function(error){return console.log(error)})},MemberDetailEditComponent.prototype.onUpdate=function(item){var _this=this;this.memberService.update(item).subscribe(function(data){_this.item=data,console.log("Item "+_this.item.ID+" has been updated."),_this.router.navigate(["member-detail-view",_this.item.ID])},function(error){return console.log(error)})},MemberDetailEditComponent.prototype.onDelete=function(item){var _this=this,id=item.ID;this.memberService.delete(id).subscribe(function(data){console.log("Item "+id+" has been deleted."),_this.router.navigate([""])},function(error){return console.log(error)})},MemberDetailEditComponent.prototype.onBack=function(){this.router.navigate([""])},MemberDetailEditComponent.prototype.onItemDetailView=function(item){this.router.navigate(["member-detail-view",item.ID])},MemberDetailEditComponent=__decorate([core_1.Component({selector:"member-detail-edit",template:'\n<div *ngIf="item">\n    <h2>\n        <a href="javascript:void(0)" (click)="onBack()">\n            &laquo; Back to Home\n        </a>\n    </h2>\n    <div class="item-container">\n        <ul class="nav nav-tabs">\n            <li role="presentation" class="active">\n                <a href="javascript:void(0)">Edit</a>\n            </li>\n            <li role="presentation" *ngIf="item.Id != 0">\n                <a href="javascript:void(0)" (click)="onItemDetailView(item)">View</a>\n            </li>\n        </ul>\n        <div class="panel panel-default">\n            <div class="panel-body">\n                <form class="item-detail-edit" #thisForm="ngForm">\n                    <h3>\n                        Edit Member Details\n                    </h3>\n                    <div class="form-group">\n                        <label for="input-firstname">First Name</label>\n                        <input id="input-firstname" name="input-firstname" type="text" class="form-control" [(ngModel)]="item.FirstName" placeholder="Insert the first name..." required />\n                    </div>\n                    <div class="form-group">\n                        <label for="input-lastname">Last Name</label>\n                        <input id="input-lastname" name="input-lastname" type="text" class="form-control" [(ngModel)]="item.LastName" placeholder="Insert the last name..." required />\n                    </div>\n                    <div class="form-group">\n                        <label for="input-emailaddress">Email Address</label>\n                        <input id="input-emailaddress" name="input-emailaddress" type="text" class="form-control" [(ngModel)]="item.EmailAddress" placeholder="Insert the email address..." required />\n                    </div>\n                    <div class="form-group">\n                        <label for="input-contactnumber">Contact Number</label>\n                        <input id="input-contactnumber" name="input-contactnumber" type="text" class="form-control" [(ngModel)]="item.ContactNumber" placeholder="Insert the contact number..." required />\n                    </div>\n                    <div class="form-group">\n                        <label for="input-dateofbirth">Date of Birth</label>\n                        <input id="input-dateofbirth" name="input-dateofbirth" type="text" ngbInputDatepicker class="form-control" [(ngModel)]="item.DateOfBirth" placeholder="Insert the date of birth..." required />\n                    </div>\n                    <div class="form-group">\n                       <label for="input-testdate">Test Date</label>\n                       <ngb-datepicker (select)="onDateSelect($event)"></ngb-datepicker>\n                    </div>\n                    <div class="form-group">\n                        <label for="input-accountstatus">Account Status</label>\n                        <input id="input-accountstatus" name="input-accountstatus" type="text" class="form-control" [(ngModel)]="item.AccountStatus" placeholder="Insert the account status..." required />\n                    </div>\n\n                    <div *ngIf="item.ID == 0" class="commands insert">\n                        <input type="button" class="btn btn-primary" value="Save" (click)="onInsert(item)" />\n                        <input type="button" class="btn btn-default" value="Cancel" (click)="onBack()" />\n                    </div>\n                    <div *ngIf="item.ID != 0" class="commands update">\n                        <input type="button" class="btn btn-primary" value="Update" (click)="onUpdate(item)" />\n                        <input type="button" class="btn btn-danger" value="Delete" (click)="onDelete(item)" />\n                        <input type="button" class="btn btn-default" value="Cancel" (click)="onItemDetailView(item)" />\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n    ',styles:[]}),__metadata("design:paramtypes",[member_service_1.MemberService,router_1.Router,router_1.ActivatedRoute])],MemberDetailEditComponent)}();exports.MemberDetailEditComponent=MemberDetailEditComponent;
//# sourceMappingURL=member-detail-edit.component.js.map

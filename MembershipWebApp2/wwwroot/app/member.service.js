"use strict";var __decorate=this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)},core_1=require("@angular/core"),http_1=require("@angular/http"),Observable_1=require("rxjs/Observable"),auth_http_1=require("./auth.http"),MemberService=function(){function MemberService(http){this.http=http,this.baseUrl="api/MemberData/"}return MemberService.prototype.getList=function(num){var url=this.baseUrl+"List/";return null!=num&&(url+=num),this.http.get(url).map(function(response){return response.json()}).catch(this.handleError)},MemberService.prototype.get=function(id){if(null==id)throw new Error("id is required.");var url=this.baseUrl+id;return this.http.get(url).map(function(res){return res.json()}).catch(this.handleError)},MemberService.prototype.getColumns=function(){return["FirstName","LastName","EmailAddress","ContactNumber","AccountStatus"]},MemberService.prototype.add=function(member){var url=this.baseUrl;return this.http.post(url,JSON.stringify(member),this.getRequestOptions()).map(function(response){return response.json()}).catch(this.handleError)},MemberService.prototype.update=function(member){var url=this.baseUrl+member.ID;return this.http.put(url,JSON.stringify(member),this.getRequestOptions()).map(function(response){return response.json()}).catch(this.handleError)},MemberService.prototype.delete=function(id){var url=this.baseUrl+id;return this.http.delete(url,new http_1.RequestOptions).catch(this.handleError)},MemberService.prototype.getRequestOptions=function(){return new http_1.RequestOptions({headers:new http_1.Headers({"Content-Type":"application/json"})})},MemberService.prototype.handleError=function(error){return console.error(error),Observable_1.Observable.throw(error.json().error||"Server error")},MemberService=__decorate([core_1.Injectable(),__metadata("design:paramtypes",[auth_http_1.AuthHttp])],MemberService)}();exports.MemberService=MemberService;
//# sourceMappingURL=member.service.js.map
